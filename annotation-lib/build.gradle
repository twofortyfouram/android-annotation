apply plugin: 'android-library'
apply plugin: 'maven'

repositories {
    mavenCentral()
}

dependencies {
}

android {
    compileSdkVersion Integer.parseInt(ANDROID_COMPILE_SDK_VERSION)
    buildToolsVersion ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(ANDROID_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(ANDROID_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(ANDROID_VERSION_CODE)
        versionName ANDROID_VERSION_NAME
        consumerProguardFiles 'proguard-consumer.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    release {
        runProguard true
        proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
        proguardFile 'proguard-project.txt'
    }
}

// TODO: Remove BuildConfig and R classes.
android.libraryVariants.all { variant ->
    task("generate ${variant.name} Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.plugin.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: MAVEN_URL) {
                authentication(userName: MAVEN_USERNAME, password: MAVEN_PASSWORD)
            }
            pom.project {
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
            pom.groupId = MAVEN_GROUP
            pom.version = ANDROID_VERSION_NAME
            pom.artifactId = MAVEN_ARTIFACT_NAME
        }
    }
}